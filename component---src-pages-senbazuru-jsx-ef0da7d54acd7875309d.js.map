{"version":3,"sources":["webpack:///./src/components/SenbazuruProgress.jsx","webpack:///./src/pages/senbazuru.jsx","webpack:///./src/components/HeroTextModule.jsx"],"names":["ProgressWrapper","styled","div","Palette","white","Typography","BodyMedium","ProgressHeader","h2","HeaderMedium","ProgressSubheader","NamesList","Name","SenbazuruProgress","query","Senbazuru","data","HeroTextModule","backgroundColor","pinkBackground","header","paragraphs","SideBySide","cta","externalCtaLink","image","senbazuruImage","childImageSharp","fluid","imageWidth","headerStyle","reverse","Divider","paperDividerImage","HeroTextModuleBackground","color","HeroTextModuleWrapper","HeaderWrapper","TextWrapper","BodyLarge","map","paragraphText","key"],"mappings":"mMAIMA,EAAkBC,IAAOC,IAAV,qFAAGD,CAAH,sIAOCE,IAAQC,MAC1BC,IAAWC,YAGTC,EAAiBN,IAAOO,GAAV,oFAAGP,CAAH,2BAEhBI,IAAWI,cAGTC,EAAoBT,IAAOC,IAAV,uFAAGD,CAAH,yBAIjBU,EAAYV,IAAOC,IAAV,+EAAGD,CAAH,mFAQTW,EAAOX,IAAOC,IAAV,0EAAGD,CAAH,6EAoCKY,EA7BW,kBACxB,kBAACb,EAAD,KACE,kBAACO,EAAD,iBACA,kBAACG,EAAD,kDAGA,kBAACC,EAAD,KACE,kBAACC,EAAD,iBACA,kBAACA,EAAD,kBACA,kBAACA,EAAD,eACA,kBAACA,EAAD,mBACA,kBAACA,EAAD,kBACA,kBAACA,EAAD,gBACA,kBAACA,EAAD,gBACA,kBAACA,EAAD,eACA,kBAACA,EAAD,gBACA,kBAACA,EAAD,gBACA,kBAACA,EAAD,iBACA,kBAACA,EAAD,eACA,kBAACA,EAAD,iBACA,kBAACA,EAAD,gBACA,kBAACA,EAAD,iBACA,kBAACA,EAAD,iBACA,kBAACA,EAAD,mBACA,kBAACA,EAAD,sBC/DN,sCAQA,IA2BaE,EAAK,aAmBHC,UA9CG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,oCACE,kBAACC,EAAA,EAAD,CACEC,gBAAiBf,IAAQgB,eACzBC,OAAO,8BACPC,WAAY,CACV,qKAGJ,kBAACC,EAAA,EAAD,CACEF,OAAO,qBACPG,IAAI,eACJC,gBAAgB,yCAChBH,WAAY,CACV,8KACA,wFAEFI,MAAOT,EAAKU,eAAeC,gBAAgBC,MAC3CC,WAAW,MACXC,YAAY,SACZC,SAAO,IAET,kBAACC,EAAA,EAAD,CAASP,MAAOT,EAAKiB,kBAAkBN,gBAAgBC,QACvD,kBAAC,EAAD,S,kCC/BJ,iDAIMM,EAA2BjC,IAAOC,IAAV,8FAAGD,CAAH,2BACR,qBAAGkC,SAGnBC,EAAwBnC,IAAOC,IAAV,2FAAGD,CAAH,+GASrBoC,EAAgBpC,IAAOC,IAAV,mFAAGD,CAAH,4BACfI,IAAWI,cAIT6B,EAAcrC,IAAOC,IAAV,iFAAGD,CAAH,qEACbI,IAAWkC,WAoBAtB,IAXQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBE,EAApB,EAAoBA,OAAQC,EAA5B,EAA4BA,WAA5B,OACrB,kBAACa,EAAD,CAA0BC,MAAOjB,GAC/B,kBAACkB,EAAD,KACE,kBAACC,EAAD,KAAgBjB,GACfC,EAAWmB,KAAI,SAAAC,GAAa,OAC3B,kBAACH,EAAD,CAAaI,IAAKD,GAAgBA","file":"component---src-pages-senbazuru-jsx-ef0da7d54acd7875309d.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Typography, Palette } from \"../utils\";\n\nconst ProgressWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  max-width: 1440px;\n  margin: 0 auto;\n  flex-direction: column;\n  padding: 112px 156px;\n  background-color: ${Palette.white};\n  ${Typography.BodyMedium}\n`;\n\nconst ProgressHeader = styled.h2`\n  margin-bottom: 32px;\n  ${Typography.HeaderMedium}\n`;\n\nconst ProgressSubheader = styled.div`\n  margin-bottom: 48px;\n`;\n\nconst NamesList = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  flex-grow: 1;\n  margin: 0 auto;\n`;\n\nconst Name = styled.div`\n  display: flex;\n  justify-content: center;\n  min-width: 350px;\n  margin-bottom: 24px;\n`;\n\nconst SenbazuruProgress = () => (\n  <ProgressWrapper>\n    <ProgressHeader>Progress</ProgressHeader>\n    <ProgressSubheader>\n      Thank you to everyone who's participated!\n    </ProgressSubheader>\n    <NamesList>\n      <Name>Cathy N.</Name>\n      <Name>Claire N.</Name>\n      <Name>Jan C.</Name>\n      <Name>Janette K.</Name>\n      <Name>Joanne B.</Name>\n      <Name>Judy S.</Name>\n      <Name>Kath D.</Name>\n      <Name>Kip H.</Name>\n      <Name>Lynn C.</Name>\n      <Name>Luis B.</Name>\n      <Name>Nikki P.</Name>\n      <Name>Sal P.</Name>\n      <Name>Sally H.</Name>\n      <Name>Sara H.</Name>\n      <Name>Susan L.</Name>\n      <Name>Susan W.</Name>\n      <Name>Suzanne D.</Name>\n      <Name>Valerie L.</Name>\n    </NamesList>\n  </ProgressWrapper>\n);\n\nexport default SenbazuruProgress;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { Palette } from \"../utils\";\nimport HeroTextModule from \"../components/HeroTextModule\";\nimport SideBySide from \"../components/SideBySide\";\nimport Divider from \"../components/Divider\";\nimport SenbazuruProgress from \"../components/SenbazuruProgress\";\n\nconst Senbazuru = ({ data }) => (\n  <>\n    <HeroTextModule\n      backgroundColor={Palette.pinkBackground}\n      header=\"One thousand origami cranes\"\n      paragraphs={[\n        \"千羽鶴 (senbazuru), or 1000 paper cranes, is a revered symbol of happiness in Japanese culture. Help us fold cranes to wish us good luck in our upcoming marriage.\",\n      ]}\n    />\n    <SideBySide\n      header=\"How to participate\"\n      cta=\"Sign up form\"\n      externalCtaLink=\"https://airtable.com/shrTMApsu737pg8W9\"\n      paragraphs={[\n        \"We’re delighted you’re interested in lending a hand. Thank you! Before you get started, fill out the sign up form. This will help us keep track of our collective progress.\",\n        \"Don’t know how to fold origami cranes? Not a problem! Check out this handy tutorial.\",\n      ]}\n      image={data.senbazuruImage.childImageSharp.fluid}\n      imageWidth=\"522\"\n      headerStyle=\"Medium\"\n      reverse\n    />\n    <Divider image={data.paperDividerImage.childImageSharp.fluid} />\n    <SenbazuruProgress />\n  </>\n);\n\nexport const query = graphql`\n  query SenbazuruQuery {\n    senbazuruImage: file(relativePath: { eq: \"senbazuru.png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    paperDividerImage: file(relativePath: { eq: \"paperDivider.png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`;\n\nexport default Senbazuru;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Typography } from \"../utils\";\n\nconst HeroTextModuleBackground = styled.div`\n  background-color: ${({ color }) => color};\n`;\n\nconst HeroTextModuleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 1440px;\n  margin: 0 auto;\n  padding: 120px 348px;\n`;\n\nconst HeaderWrapper = styled.div`\n  ${Typography.HeaderMedium}\n  margin-bottom: 32px;\n`;\n\nconst TextWrapper = styled.div`\n  ${Typography.BodyLarge}\n  max-width: 744px;\n  margin-bottom: 32px;\n\n  &:last-of-type {\n    margin: 0;\n  }\n`;\n\nconst HeroTextModule = ({ backgroundColor, header, paragraphs }) => (\n  <HeroTextModuleBackground color={backgroundColor}>\n    <HeroTextModuleWrapper>\n      <HeaderWrapper>{header}</HeaderWrapper>\n      {paragraphs.map(paragraphText => (\n        <TextWrapper key={paragraphText}>{paragraphText}</TextWrapper>\n      ))}\n    </HeroTextModuleWrapper>\n  </HeroTextModuleBackground>\n);\n\nexport default HeroTextModule;\n"],"sourceRoot":""}